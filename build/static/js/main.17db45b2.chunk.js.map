{"version":3,"sources":["chat-logo-design_93835-108.jpg","StateProvider.js","Header.js","firebase.js","SidebarOption.js","Sidebar.js","Message.js","ChatInput.js","Chat.js","reducer.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Header","user","className","Avatar","alt","displayName","src","photoURL","placeholder","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","provider","GoogleAuthProvider","SidebarOption","Icon","title","id","addChannelOption","history","useHistory","onClick","channelName","prompt","collection","add","name","push","Sidebar","useState","channels","setChannels","useEffect","onSnapshot","snapshot","docs","map","doc","data","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","channel","Message","message","timestamp","userImage","Date","toDate","toUTCString","ChatInput","channelId","input","setInput","onChange","e","target","type","preventDefault","FieldValue","serverTimestamp","Chat","roomId","useParams","roomDetails","setRoomDetails","roomMessages","setRoomMessages","orderBy","console","log","actionTypes","state","action","Login","dispatch","logo","Button","signInWithPopup","then","result","catch","error","alert","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,wD,uYCG9BC,EAAeC,0BAEfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAUC,EAAb,EAAaA,aAAeC,EAA5B,EAA4BA,SAA5B,OACzB,kBAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAAQC,IAChDC,IAIQI,EAAgB,kBAAMC,qBAAWV,ICoB/BW,MAvBf,WAAmB,IAAD,EACGF,IAATG,EADM,oBACNA,KACR,OACA,yBAAKC,UAAU,UACX,yBAAKA,UAAU,gBACX,kBAACC,EAAA,EAAD,CACID,UAAU,iBACVE,IAAG,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAMI,YACXC,IAAG,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAMM,WAEf,kBAAC,IAAD,OAEJ,yBAAKL,UAAU,kBACf,kBAAC,IAAD,MACA,2BAAOM,YAAY,iBAEnB,yBAAKN,UAAU,iBACf,kBAAC,IAAD,S,sCCXFO,EAAcC,IAASC,cAXN,CACnBC,OAAQ,0CACRC,WAAY,2BACZC,YAAa,kCACbC,UAAW,WACXC,cAAe,uBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIbC,EAAKX,EAAYY,YACjBC,EAAOb,EAAYa,OACnBC,EAAW,IAAIb,IAASY,KAAKE,mBAGpBJ,ICmBAK,MAlCf,YAAiE,IAAxCC,EAAuC,EAAvCA,KAAOC,EAAgC,EAAhCA,MAAQC,EAAwB,EAAxBA,GAAMC,EAAkB,EAAlBA,iBACpCC,EAAUC,cAoBhB,OACI,yBAAK7B,UAAU,gBAAgB8B,QAASH,EAXzB,WACf,IAAMI,EAAcC,OAAO,iCAEvBD,GACAb,EAAGe,WAAW,SAASC,IAAI,CACvBC,KAAOJ,KAbG,WACdL,EACAE,EAAQQ,KAAR,gBAAsBV,IAEtBE,EAAQQ,KAAKX,KAgBZD,GAAQ,kBAACA,EAAD,CAAMxB,UAAU,wBACxBwB,EAAQ,4BAAKC,GACd,wBAAIzB,UAAU,0BACV,0BAAMA,UAAU,uBAAhB,KACCyB,K,4MCsCFY,MApDf,WAAoB,IAAD,EACkBC,mBAAS,IAD3B,mBACRC,EADQ,KACGC,EADH,OAEE5C,IAATG,EAFO,oBAEPA,KAeR,OAbA0C,qBAAU,WAEVvB,EAAGe,WAAW,SAASS,YAAW,SAACC,GAAD,OAC9BH,EACIG,EAASC,KAAKC,KAAI,SAACC,GAAD,MAAS,CACvBpB,GAAIoB,EAAIpB,GACRS,KAAMW,EAAIC,OAAOZ,eAI1B,IAIC,yBAAKnC,UAAU,WACP,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,iBACX,uCACA,4BACA,kBAAC,IAAD,MADA,OAECD,QAFD,IAECA,OAFD,EAECA,EAAMI,cAGV,kBAAC,IAAD,OAET,kBAAC,EAAD,CAAeqB,KAAMwB,IAAmBvB,MAAM,YAC9C,kBAAC,EAAD,CAAeD,KAAMyB,IAAWxB,MAAM,wBACtC,kBAAC,EAAD,CAAeD,KAAM0B,IAAYzB,MAAM,gBACvC,kBAAC,EAAD,CAAeD,KAAM2B,IAAoB1B,MAAM,oBAC/C,kBAAC,EAAD,CAAeD,KAAM4B,IAAe3B,MAAM,yBAC1C,kBAAC,EAAD,CAAeD,KAAM6B,IAAU5B,MAAM,SACrC,kBAAC,EAAD,CAAeD,KAAM8B,IAAc7B,MAAM,iBACzC,kBAAC,EAAD,CAAeD,KAAM+B,IAAgB9B,MAAM,cAC3C,6BACA,kBAAC,EAAD,CAAeD,KAAMgC,IAAgB/B,MAAM,aAC3C,6BACA,kBAAC,EAAD,CAAeD,KAAMiC,IAAS9B,kBAAgB,EAACF,MAAM,iBAKpDc,EAASM,KAAI,SAACa,GAAD,OACV,kBAAC,EAAD,CAAejC,MAAOiC,EAAQvB,KAAMT,GAAIgC,EAAQhC,U,oDC7CjDiC,OAhBf,YAA+D,IAA3CC,EAA0C,EAA1CA,QAAUC,EAAgC,EAAhCA,UAAY9D,EAAoB,EAApBA,KAAO+D,EAAa,EAAbA,UAC7C,OACI,yBAAK9D,UAAU,WACX,yBAAKI,IAAK0D,EAAW5D,IAAI,KACzB,yBAAKF,UAAU,iBACX,4BAAKD,EAAM,IACP,0BAAMC,UAAU,sBACX,IAAI+D,KAAJ,OAASF,QAAT,IAASA,OAAT,EAASA,EAAWG,UAAUC,gBAGvC,2BAAIL,M,MCgCLM,OApCf,YAA+C,EAA3BnC,YAA4B,IAAdoC,EAAa,EAAbA,UAAa,EAEpB7B,mBAAS,IAFW,mBAExC8B,EAFwC,KAEhCC,EAFgC,OAG9BzE,IAATG,EAHuC,oBAGvCA,KAiBJ,OACI,yBAAKC,UAAU,aACX,8BACI,2BACAN,MAAO0E,EACPE,SAAc,SAAAC,GAAC,OAAKF,EAASE,EAAEC,OAAO9E,QACtCY,YAAW,mBAEX,4BAAQmE,KAAK,SAAS3C,QAvBlB,SAAAyC,GAChBA,EAAEG,iBAEEP,GACAjD,EAAGe,WAAW,SAASa,IAAIqB,GAAWlC,WAAW,YAAYC,IAAI,CAC7D0B,QAAUQ,EACVP,UAAYrD,IAASW,UAAUwD,WAAWC,kBAC1C7E,KAAOA,EAAKI,YACZ2D,UAAY/D,EAAKM,WAIzBgE,EAAS,MAWG,WCwBDQ,OArDf,WAAiB,IACLC,EAAWC,cAAXD,OADI,EAE2BxC,mBAAS,MAFpC,mBAEL0C,EAFK,KAESC,EAFT,OAG6B3C,mBAAS,IAHtC,mBAGL4C,EAHK,KAGUC,EAHV,KAsBZ,OAjBA1C,qBAAU,WACFqC,GACA5D,EAAGe,WAAW,SAASa,IAAIgC,GAC1BpC,YAAW,SAACC,GAAD,OAAcsC,EAAetC,EAASI,WAGtD7B,EAAGe,WAAW,SAASa,IAAIgC,GAC1B7C,WAAW,YACXmD,QAAQ,YAAY,OACpB1C,YAAW,SAACC,GAAD,OACRwC,EAAgBxC,EAASC,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,gBAEpD,CAAC+B,IAEJO,QAAQC,IAAIN,GACZK,QAAQC,IAAI,gBAAkBJ,GAG1B,yBAAKlF,UAAU,QACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,qBACd,2CAAUgF,QAAV,IAAUA,OAAV,EAAUA,EAAa7C,MACnB,kBAAC,KAAD,QAIR,yBAAKnC,UAAU,qBACX,2BACI,kBAAC,KAAD,MADJ,cAKR,yBAAKA,UAAU,kBACVkF,EAAarC,KAAI,gBAAEe,EAAF,EAAEA,QAAUC,EAAZ,EAAYA,UAAY9D,EAAxB,EAAwBA,KAAO+D,EAA/B,EAA+BA,UAA/B,OACd,kBAAC,GAAD,CACAF,QAAWA,EACXC,UAAaA,EACb9D,KAAQA,EACR+D,UAAaA,QAIrB,kBAAC,GAAD,CAAW/B,YAAW,OAAEiD,QAAF,IAAEA,OAAF,EAAEA,EAAa7C,KAAMgC,UAAWW,M,wDCpDrDS,GACE,WAiBAjG,GAdC,SAACkG,EAAMC,GAGnB,OAFAJ,QAAQC,IAAIG,GAELA,EAAOhB,MACV,KAAKc,GACD,OAAO,6BACAC,GADP,IAEIzF,KAAM0F,EAAO1F,OAErB,QACI,OAAOyF,ICgBJE,OA1Bf,WAAkB,IAAD,EACU9F,IADV,mBACF+F,GADE,WAeb,OACI,yBAAK3F,UAAU,SACX,yBAAKA,UAAU,oBACX,yBAAKI,IAAKwF,KAAM1F,IAAI,cACpB,kDACA,kBAAC2F,GAAA,EAAD,CAAQ/D,QAlBN,WACVV,EAAK0E,gBAAgBzE,GACpB0E,MAAK,SAAAC,GACFX,QAAQC,IAAIU,GACZL,EAAS,CACLlB,KAAOc,GACPxF,KAAMiG,EAAOjG,UAGpBkG,OAAM,SAAAC,GACHC,MAAMD,EAAMtC,cAQR,2BCYDwC,OA/Bf,WAAgB,IAAD,EACgBxG,IADhB,mBACJG,EADI,KACJA,KAET,OAHa,KAIX,yBAAKC,UAAU,OACb,kBAAC,KAAD,KACID,EAGA,oCACA,kBAAC,EAAD,MACF,yBAAKC,UAAU,aACb,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqG,KAAK,iBACR,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,KACV,2CAZJ,kBAAC,GAAD,SCJUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAetH,aJTS,CACxBQ,KAAO,MIQoCT,QAASA,IAClD,kBAAC,GAAD,QAGJwH,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnB,MAAK,SAAAoB,GACJA,EAAaC,gBAEdnB,OAAM,SAAAC,GACLb,QAAQa,MAAMA,EAAMtC,c","file":"static/js/main.17db45b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chat-logo-design_93835-108.60ba0f92.jpg\";","import React , {createContext , useContext , useReducer } from \"react\";\r\n\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer , initialState , children }) =>  (\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n    {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React from 'react'\r\nimport './Header.css';\r\nimport { Avatar } from '@material-ui/core';\r\nimport AccessTimeIcons from '@material-ui/icons/AccessTime'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Header() {\r\n    const [{user}] = useStateValue();\r\n    return ( \r\n    <div className=\"header\">\r\n        <div className=\"header__left\">\r\n            <Avatar \r\n                className=\"header__avatar\"\r\n                alt={user?.displayName}\r\n                src={user?.photoURL}\r\n            />\r\n            <AccessTimeIcons />\r\n        </div>\r\n        <div className=\"header__search\">\r\n        <SearchIcon />\r\n        <input placeholder=\"search user\" />\r\n        </div>\r\n        <div className=\"header__right\">\r\n        <HelpOutlineIcon />\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import firebase from \"firebase\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBcUSrwahR6FsKe6zxPt59P03XtIYGUEcg\",\r\n    authDomain: \"chatty-g.firebaseapp.com\",\r\n    databaseURL: \"https://chatty-g.firebaseio.com\",\r\n    projectId: \"chatty-g\",\r\n    storageBucket: \"chatty-g.appspot.com\",\r\n    messagingSenderId: \"639171087831\",\r\n    appId: \"1:639171087831:web:1a995219ed7461a5f44f92\",\r\n    measurementId: \"G-4RBQPFN9CF\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebaseApp.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth , provider};\r\nexport default db;","import React from 'react'\r\nimport \"./SidebarOption.css\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport db from './firebase';\r\n\r\nfunction SidebarOption ({Icon , title , id ,  addChannelOption}){\r\n    const history = useHistory();\r\n\r\n    const selectChannel = () => {\r\n        if (id) {\r\n            history.push(`/room/${id}`)\r\n        } else {\r\n            history.push(title);\r\n        }\r\n    };\r\n\r\n    const addChannel = () => {\r\n        const channelName = prompt(\"Please enter the channel name\");\r\n\r\n        if (channelName) {\r\n            db.collection('rooms').add({\r\n                name : channelName,\r\n            })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"sidebaroption\" onClick={addChannelOption ? addChannel : selectChannel }>\r\n            {Icon && <Icon className=\"sidebaroption__icon\"/>}\r\n            {Icon ? (<h3>{title}</h3>):(\r\n            <h3 className=\"sidebaroption__channel\">\r\n                <span className=\"sidebaroption__hash\">#</span> \r\n                {title}\r\n            </h3>\r\n             )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidebarOption;\r\n","import React , { useState , useEffect } from 'react'\r\nimport './Sidebar.css';\r\nimport SidebarOption from \"./SidebarOption\"\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar() {\r\n    const [channels , setChannels] = useState([]);\r\n    const [{user}] = useStateValue();\r\n     \r\n    useEffect(() => {\r\n     // Run this code ONCE when the sidebar components loads\r\n    db.collection('rooms').onSnapshot((snapshot) => \r\n        setChannels(\r\n            snapshot.docs.map((doc)=> ({\r\n                id: doc.id,\r\n                name: doc.data().name,\r\n            }))\r\n            )\r\n        );\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n                <div className=\"sidebar__header\">\r\n                    <div className=\"sidebar__info\">\r\n                        <h2>Drivool</h2>\r\n                        <h3>\r\n                        <FiberManualRecordIcon />\r\n                        {user?.displayName}\r\n                        </h3>\r\n                    </div>\r\n                     <CreateIcon />\r\n                </div>\r\n            <SidebarOption Icon={InsertCommentIcon} title=\"Threads\"/>\r\n            <SidebarOption Icon={InboxIcon} title=\"Mentions & Reaction\"/>\r\n            <SidebarOption Icon={DraftsIcon} title=\"Saved Items\"/>\r\n            <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel Browser\"/>\r\n            <SidebarOption Icon={PeopleAltIcon} title=\"People & User groups\"/>\r\n            <SidebarOption Icon={AppsIcon} title=\"Apps\"/>\r\n            <SidebarOption Icon={FileCopyIcon} title=\"File Browser\"/>\r\n            <SidebarOption Icon={ExpandLessIcon} title=\"Show less\"/>\r\n            <hr/>\r\n            <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\"/>\r\n            <hr/>\r\n            <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channels\"/>\r\n\r\n\r\n            {/*connent to dB and list all the channels*/}\r\n            {/*<SidebarOption/>....*/}\r\n            {channels.map((channel) => (\r\n                <SidebarOption title={channel.name} id={channel.id} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react'\r\nimport \"./Message.css\"; \r\n\r\nfunction Message( { message , timestamp , user , userImage }) {\r\n    return (\r\n        <div className=\"message\">\r\n            <img src={userImage} alt=\"\" />\r\n            <div className=\"message__info\">\r\n                <h4>{user}{\" \"}\r\n                    <span className=\"message__timestamp\">\r\n                        {new Date(timestamp?.toDate()).toUTCString()}\r\n                    </span>\r\n                </h4>\r\n                <p>{message}</p> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React , { useState } from 'react';\r\nimport './ChatInput.css';\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from \"firebase\";\r\nimport db from \"./firebase\";\r\n\r\n\r\n\r\n\r\nfunction ChatInput({channelName , channelId }) {\r\n\r\nconst [input , setInput] = useState(\"\");\r\nconst [{user}] = useStateValue();\r\n\r\nconst sendMessage = e => {\r\n    e.preventDefault();\r\n\r\n    if (channelId) {\r\n        db.collection('rooms').doc(channelId).collection('messages').add({\r\n            message : input , \r\n            timestamp : firebase.firestore.FieldValue.serverTimestamp(), \r\n            user : user.displayName,\r\n            userImage : user.photoURL , \r\n        });\r\n    }\r\n\r\n    setInput(\"\");\r\n};\r\n\r\n    return (\r\n        <div className=\"chatinput\">\r\n            <form>\r\n                <input \r\n                value={input}\r\n                onChange={    e => (setInput(e.target.value))    } \r\n                placeholder={`Type a message`} \r\n                />\r\n                <button type=\"submit\" onClick={sendMessage}>\r\n                    SEND\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatInput;\r\n","import React , {useState, useEffect} from 'react';\r\nimport \"./Chat.css\";\r\nimport { useParams } from 'react-router-dom';\r\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport db from './firebase';\r\nimport Message from './Message';\r\nimport ChatInput from \"./ChatInput\";\r\nfunction Chat() {\r\n    const { roomId } = useParams();\r\n    const [roomDetails , setRoomDetails] = useState(null);\r\n    const [roomMessages , setRoomMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection('rooms').doc(roomId)\r\n            .onSnapshot((snapshot) => setRoomDetails(snapshot.data()))\r\n        }\r\n\r\n        db.collection('rooms').doc(roomId)\r\n        .collection('messages')\r\n        .orderBy('timestamp','asc')\r\n        .onSnapshot((snapshot) =>\r\n            setRoomMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }, [roomId]);\r\n\r\n    console.log(roomDetails);\r\n    console.log(\"MESSAGES >>> \" , roomMessages);\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <div className=\"chat__headerleft\">\r\n                    <h4 className=\"chat__channelname\">\r\n                    <strong>#{roomDetails?.name}</strong>\r\n                        <StarBorderOutlinedIcon />\r\n                    </h4>\r\n                </div>\r\n            \r\n                <div className=\"chat__headerright\">\r\n                    <p>\r\n                        <InfoOutlinedIcon /> Details\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat__messages\">\r\n                {roomMessages.map(({message , timestamp , user , userImage}) => (\r\n                    <Message \r\n                    message = {message}\r\n                    timestamp = {timestamp}\r\n                    user = {user}\r\n                    userImage = {userImage}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <ChatInput channelName={roomDetails?.name} channelId={roomId} /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n","export const initialState = {\r\n    user : null ,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER : \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state,action) => {\r\n    console.log(action);\r\n\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport \"./Login.css\";\r\nimport {Button} from '@material-ui/core';\r\nimport logo from \"./chat-logo-design_93835-108.jpg\";\r\nimport { auth , provider } from \"./firebase\";\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from \"./reducer\";\r\n\r\nfunction Login() {\r\nconst [state , dispatch] = useStateValue();\r\n   const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n        .then(result => {\r\n            console.log(result);\r\n            dispatch({\r\n                type : actionTypes.SET_USER,\r\n                user: result.user,\r\n            });\r\n        })\r\n        .catch(error =>{\r\n            alert(error.message);\r\n        });\r\n    };\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img src={logo} alt=\"Chat Logo\"/>\r\n                <h1>Sign in to Connect</h1>\r\n                <Button onClick={signIn}> SIGN IN WITH GOOGLE</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React , { useState } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Chat from \"./Chat\";\nimport { BrowserRouter as Router , Switch , Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  const [ {user} , dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (\n          <>\n          <Header />\n        <div className=\"app__body\">\n          <Sidebar />\n\n          <Switch>\n            <Route path=\"/room/:roomId\">\n                <Chat />\n            </Route>\n            <Route path=\"/\">\n              <h1>Welcome</h1>\n            </Route>\n          </Switch>\n        </div>\n          </>\n        )}\n        \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from './reducer';\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}